// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RapPhimOOSD.Models;

namespace RapPhimOOSD.Migrations
{
    [DbContext(typeof(DatabaseDbContext))]
    [Migration("20200710053120_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RapPhimOOSD.Models.Customer", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("dob");

                    b.Property<string>("email");

                    b.Property<string>("gender");

                    b.Property<string>("name");

                    b.Property<string>("phoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RapPhimOOSD.Models.Login", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("password");

                    b.Property<string>("role");

                    b.Property<string>("sessionId");

                    b.Property<string>("userName");

                    b.HasKey("Id");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("RapPhimOOSD.Models.Movie", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("author");

                    b.Property<float>("duration");

                    b.Property<string>("movieName");

                    b.Property<float>("movieRating");

                    b.Property<string>("poster");

                    b.Property<string>("typeMovie");

                    b.Property<DateTime>("yearPublish");

                    b.HasKey("id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("RapPhimOOSD.Models.Trailer", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("linkTrailer");

                    b.HasKey("Id");

                    b.ToTable("Trailers");
                });

            modelBuilder.Entity("RapPhimOOSD.Models.Customer", b =>
                {
                    b.HasOne("RapPhimOOSD.Models.Login", "idAccount")
                        .WithOne("customer")
                        .HasForeignKey("RapPhimOOSD.Models.Customer", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RapPhimOOSD.Models.Trailer", b =>
                {
                    b.HasOne("RapPhimOOSD.Models.Movie", "movie")
                        .WithOne("trailerLink")
                        .HasForeignKey("RapPhimOOSD.Models.Trailer", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
